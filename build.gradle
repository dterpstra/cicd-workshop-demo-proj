 buildscript {
    ext {
        springBootVersion = '2.0.2.RELEASE'
    }
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('com.moowork.gradle:gradle-node-plugin:1.2.0')
        classpath('io.franzbecker:gradle-lombok:1.14')
        classpath('org.cloudfoundry:cf-gradle-plugin:1.1.3')
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.moowork.node'
apply plugin: 'io.franzbecker.gradle-lombok' 
apply plugin: 'cloudfoundry'


group = 'com.jcore.cicd'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}


dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    compileOnly('org.projectlombok:lombok:1.18.0')
    testCompile('org.springframework.boot:spring-boot-starter-test')
}

ext {
    frontendDir = "$projectDir/src/main/webapp"
}
 processResources {
     dependsOn "frontendCopy"
 }

 task buildAngular(type: NpmTask) {
     dependsOn "installAngular"

     // Set input and output so Gradle can
     // determine if task is up-to-date.
     inputs.dir "${frontendDir}/e2e"
     inputs.dir "${frontendDir}/src"
     inputs.dir "${frontendDir}/node_modules"
     outputs.dir "${frontendDir}/dist"

     args = ['run-script', 'build']
     execOverrides {
         it.workingDir "$frontendDir"
     }
 }

 task installAngular(type: NpmTask) {
     // Set input and output so Gradle can
     // determine if task is up-to-date.
     inputs.file "${frontendDir}/package.json"
     outputs.dir "${frontendDir}/node_modules"

     args = ['install']
     execOverrides {
         it.workingDir "$frontendDir"
     }
 }

 task frontendCopy(type: Copy) {
     from buildAngular
     into "${sourceSets.main.output.resourcesDir}/static"
 }

 cloudfoundry {
     target = "https://api.run.pivotal.io"
     organization = "JCore"
     space = "Fast Track CICD"
     application = "cicd-from-circleci"
     uri = "cicd-app-circleci.cfapps.io"
     memory = 1024
     instances = 1
     buildpack = "https://github.com/cloudfoundry/java-buildpack.git"
}
